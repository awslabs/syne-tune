name: End-to-end Tests

# Tests in this file can be invoked manually. We run them before every release.
# These tests can invoke AWS services from our integ test account.

on:
  workflow_dispatch:
  # pull_request: # Uncomment if you want to manually run the end-to-end tests against a new PR that you're drafting
  #   branches:   # Uncomment if you want to manually run the end-to-end tests against a new PR that you're drafting
  #     - main    # Uncomment if you want to manually run the end-to-end tests against a new PR that you're drafting


permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

env:
  AWS_DEFAULT_REGION: us-west-2
  AWS_ROLE: ${{ secrets.PROD_AWS_INTEG_TEST_ROLE_ARN }}

jobs:
  stop_all_training_jobs: 
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.PROD_AWS_INTEG_TEST_ROLE_ARN }}
          role-session-name: integtestsession
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
      - name: Install boto3
        run: python -m pip install boto3
      - name: Stop all left-over training jobs
        run: |
          import boto3
          from time import sleep
          
          def get_in_progress_training_jobs(sagemaker):
              in_progress_jobs = []
              paginator = sagemaker.get_paginator('list_training_jobs')
          
              for page in paginator.paginate(StatusEquals='InProgress'):
                  in_progress_jobs.extend(page['TrainingJobSummaries'])
                  sleep(2)
          
              return in_progress_jobs
          
          def stop_training_jobs(sagemaker, in_progress_jobs):
              for job in in_progress_jobs:
                  job_name = job['TrainingJobName']
                  print(f'Stopping training job: {job_name}')
                  sagemaker.stop_training_job(TrainingJobName=job_name)
                  sleep(1)
          
          sagemaker = boto3.client('sagemaker')          
          in_progress_jobs = get_in_progress_training_jobs(sagemaker)
          stop_training_jobs(sagemaker, in_progress_jobs)
        
        shell: python


# Longer-running code in examples/, may need BB repository

  launch_tuning_gluonts:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: extra
      script-path: examples/launch_tuning_gluonts.py
      requires-aws-credentials: true
    secrets: inherit

  launch_moasha_instance_tuning:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: extra
      script-path: examples/launch_moasha_instance_tuning.py
      requires-aws-credentials: true
    secrets: inherit

  launch_height_sagemaker:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: aws
      script-path: examples/launch_height_sagemaker.py
      requires-aws-credentials: true
    secrets: inherit

  launch_huggingface_classification:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: aws
      script-path: examples/launch_huggingface_classification.py
      requires-aws-credentials: true
    secrets: inherit

  launch_height_sagemaker_remotely_false:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: aws
      script-path: examples/launch_height_sagemaker_remotely.py --use_sagemaker_backend 0
      requires-aws-credentials: true
    secrets: inherit

  launch_height_sagemaker_remotely_true:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: aws
      script-path: examples/launch_height_sagemaker_remotely.py --use_sagemaker_backend 1
      requires-aws-credentials: true
    secrets: inherit

  launch_height_sagemaker_checkpoints:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: aws
      script-path: examples/launch_height_sagemaker_checkpoints.py
      requires-aws-credentials: true
    secrets: inherit

  launch_simulated_benchmark:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: blackbox-repository,aws
      script-path: examples/launch_simulated_benchmark.py
      requires-aws-credentials: true
    secrets: inherit

  launch_nas201_transfer_learning:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: blackbox-repository,aws
      additional-command: pip install matplotlib
      script-path: examples/launch_nas201_transfer_learning.py
      requires-aws-credentials: true
    secrets: inherit

  launch_nasbench201_simulated:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: blackbox-repository,aws
      script-path: examples/launch_nasbench201_simulated.py
      requires-aws-credentials: true
    secrets: inherit

  launch_pasha_nasbench201:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: blackbox-repository,aws
      script-path: examples/launch_pasha_nasbench201.py
      requires-aws-credentials: true
    secrets: inherit

  launch_cqr_nasbench201:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: extra
      script-path: examples/launch_cqr_nasbench201.py
      requires-aws-credentials: true
    secrets: inherit

  launch_height_config_json_sagemaker:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: aws
      script-path: examples/launch_height_config_json.py --use_sagemaker_backend 1
      requires-aws-credentials: true
    secrets: inherit

  launch_fashionmnist_checkpoint_removal:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: gpsearchers,aws
      additional-command: pip install -r benchmarking/training_scripts/mlp_on_fashion_mnist/requirements.txt
      script-path: examples/launch_fashionmnist_checkpoint_removal.py
      requires-aws-credentials: true
    secrets: inherit

  launch_lcbench_simulated:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: gpsearchers,blackbox-repository,aws
      script-path: examples/launch_lcbench_simulated.py
      requires-aws-credentials: true
    secrets: inherit

  example_automatic_termination_criterion:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: extra
      script-path: examples/example_automatic_termination_criterion.py
      requires-aws-credentials: true
    secrets: inherit

# Code in docs/source/tutorials/basics/code

  launch_basics_tutorial_rs:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: gpsearchers
      additional-command: pip install -r benchmarking/training_scripts/mlp_on_fashion_mnist/requirements.txt
      script-path: docs/source/tutorials/basics/code/hpo_main.py --max_wallclock_time 300 --method RS
      requires-aws-credentials: true
    secrets: inherit

  launch_basics_tutorial_bo:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: gpsearchers
      additional-command: pip install -r benchmarking/training_scripts/mlp_on_fashion_mnist/requirements.txt
      script-path: docs/source/tutorials/basics/code/hpo_main.py --max_wallclock_time 300 --method BO
      requires-aws-credentials: true
    secrets: inherit

  launch_basics_tutorial_asha_stop:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: gpsearchers
      additional-command: pip install -r benchmarking/training_scripts/mlp_on_fashion_mnist/requirements.txt
      script-path: docs/source/tutorials/basics/code/hpo_main.py --max_wallclock_time 300 --method ASHA-STOP
      requires-aws-credentials: true
    secrets: inherit

  launch_basics_tutorial_asha_prom:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: gpsearchers
      additional-command: pip install -r benchmarking/training_scripts/mlp_on_fashion_mnist/requirements.txt
      script-path: docs/source/tutorials/basics/code/hpo_main.py --max_wallclock_time 300 --method ASHA-PROM
      requires-aws-credentials: true
    secrets: inherit

  launch_basics_tutorial_mobster_stop:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: gpsearchers
      additional-command: pip install -r benchmarking/training_scripts/mlp_on_fashion_mnist/requirements.txt
      script-path: docs/source/tutorials/basics/code/hpo_main.py --max_wallclock_time 300 --method MOBSTER-STOP
      requires-aws-credentials: true
    secrets: inherit

  launch_basics_tutorial_mobster_prom:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: gpsearchers
      additional-command: pip install -r benchmarking/training_scripts/mlp_on_fashion_mnist/requirements.txt
      script-path: docs/source/tutorials/basics/code/hpo_main.py --max_wallclock_time 300 --method MOBSTER-PROM
      requires-aws-credentials: true
    secrets: inherit

# Code in docs/source/tutorials/multifidelity/code

  launch_mf_tutorial_asha_stop:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: gpsearchers,blackbox-repository,aws,kde
      script-path: docs/source/tutorials/multifidelity/code/hpo_main.py --method ASHA-STOP
      requires-aws-credentials: true
    secrets: inherit

  launch_mf_tutorial_asha_prom:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: gpsearchers,blackbox-repository,aws,kde
      script-path: docs/source/tutorials/multifidelity/code/hpo_main.py --method ASHA-PROM
      requires-aws-credentials: true
    secrets: inherit

  launch_mf_tutorial_asha6_stop:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: gpsearchers,blackbox-repository,aws,kde
      script-path: docs/source/tutorials/multifidelity/code/hpo_main.py --method ASHA6-STOP
      requires-aws-credentials: true
    secrets: inherit

  launch_mf_tutorial_mobster_joint:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: gpsearchers,blackbox-repository,aws,kde
      script-path: docs/source/tutorials/multifidelity/code/hpo_main.py --method MOBSTER-JOINT
      requires-aws-credentials: true
    secrets: inherit

  launch_mf_tutorial_mobster_indep:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: gpsearchers,blackbox-repository,aws,kde
      script-path: docs/source/tutorials/multifidelity/code/hpo_main.py --method MOBSTER-INDEP
      requires-aws-credentials: true
    secrets: inherit

  launch_mf_tutorial_hypertune_indep:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: gpsearchers,blackbox-repository,aws,kde
      script-path: docs/source/tutorials/multifidelity/code/hpo_main.py --method HYPERTUNE-INDEP
      requires-aws-credentials: true
    secrets: inherit

  launch_mf_tutorial_hypertune4_indep:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: gpsearchers,blackbox-repository,aws,kde
      script-path: docs/source/tutorials/multifidelity/code/hpo_main.py --method HYPERTUNE4-INDEP
      requires-aws-credentials: true
    secrets: inherit

  launch_mf_tutorial_hypertune_joint:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: gpsearchers,blackbox-repository,aws,kde
      script-path: docs/source/tutorials/multifidelity/code/hpo_main.py --method HYPERTUNE-JOINT
      requires-aws-credentials: true
    secrets: inherit

  launch_mf_tutorial_synchb:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: gpsearchers,blackbox-repository,aws,kde
      script-path: docs/source/tutorials/multifidelity/code/hpo_main.py --method SYNCHB
      requires-aws-credentials: true
    secrets: inherit

  launch_mf_tutorial_syncsh:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: gpsearchers,blackbox-repository,aws,kde
      script-path: docs/source/tutorials/multifidelity/code/hpo_main.py --method SYNCSH
      requires-aws-credentials: true
    secrets: inherit

  launch_mf_tutorial_syncmobster:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: gpsearchers,blackbox-repository,aws,kde
      script-path: docs/source/tutorials/multifidelity/code/hpo_main.py --method SYNCMOBSTER
      requires-aws-credentials: true
    secrets: inherit

  launch_mf_tutorial_bohb:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: gpsearchers,blackbox-repository,aws,kde
      script-path: docs/source/tutorials/multifidelity/code/hpo_main.py --method BOHB
      requires-aws-credentials: true
    secrets: inherit

  launch_mf_tutorial_dehb:
    needs: stop_all_training_jobs
    uses: ./.github/workflows/run-syne-tune.yml
    with:
      extras-require: gpsearchers,blackbox-repository,aws,kde
      script-path: docs/source/tutorials/multifidelity/code/hpo_main.py --method DEHB
      requires-aws-credentials: true
    secrets: inherit
